/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/flags/sync/route";
exports.ids = ["app/api/flags/sync/route"];
exports.modules = {

/***/ "(rsc)/../../dist/chunk-B67M3F4I.js":
/*!************************************!*\
  !*** ../../dist/chunk-B67M3F4I.js ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __export: () => (/* binding */ __export),\n/* harmony export */   formatNamespacedKey: () => (/* binding */ formatNamespacedKey),\n/* harmony export */   resolveEnvironment: () => (/* binding */ resolveEnvironment)\n/* harmony export */ });\nvar __defProp = Object.defineProperty;\nvar __export = (target, all)=>{\n    for(var name in all)__defProp(target, name, {\n        get: all[name],\n        enumerable: true\n    });\n};\n// src/utils/env.ts\nfunction resolveEnvironment(explicit) {\n    if (explicit && explicit.length > 0) return explicit;\n    const vercelEnv = process.env.VERCEL_ENV;\n    if (vercelEnv && vercelEnv.length > 0) return vercelEnv;\n    const nodeEnv = \"development\";\n    if (nodeEnv && nodeEnv.length > 0) return mapNodeEnv(nodeEnv);\n    return \"production\";\n}\nfunction mapNodeEnv(env) {\n    if (env === \"development\") return \"development\";\n    if (env === \"test\") return \"test\";\n    if (env === \"production\") return \"production\";\n    return env;\n}\nfunction formatNamespacedKey(namespace, env, key) {\n    return `${namespace}__${env}__${key}`;\n}\n //# sourceMappingURL=chunk-B67M3F4I.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vZGlzdC9jaHVuay1CNjdNM0Y0SS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUVPLFNBQVMsbUJBQW1CLFVBQW9EO0lBQ3JGLElBQUksWUFBWSxTQUFTLFNBQVMsRUFBRyxRQUFPO0lBQzVDLE1BQU0sWUFBWSxRQUFRLElBQUk7SUFDOUIsSUFBSSxhQUFhLFVBQVUsU0FBUyxFQUFHLFFBQU87SUFDOUMsTUFBTSxVQUFVLFFBQVEsSUFBSTtJQUM1QixJQUFJLFdBQVcsUUFBUSxTQUFTLEVBQUcsUUFBTyxXQUFXLE9BQU87SUFDNUQsT0FBTztBQUNUO0FBRUEsU0FBUyxXQUFXLEtBQXVDO0lBQ3pELElBQUksUUFBUSxjQUFlLFFBQU87SUFDbEMsSUFBSSxRQUFRLE9BQVEsUUFBTztJQUMzQixJQUFJLFFBQVEsYUFBYyxRQUFPO0lBQ2pDLE9BQU87QUFDVDtBQUVPLFNBQVMsb0JBQW9CLFdBQW1CLEtBQXNCLEtBQXFCO0lBQ2hHLE9BQU8sR0FBRyxTQUFTLEtBQUssR0FBRyxLQUFLLEdBQUc7QUFDckMiLCJzb3VyY2VzIjpbIi9Vc2Vycy95YWhvcmJhcmtvdXNraS90aGVuZXR3b3JrL2VkZ2UtZmVhdHVyZS1mbGFncy9leGFtcGxlcy9zcmMvdXRpbHMvZW52LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgRW52aXJvbm1lbnROYW1lIH0gZnJvbSBcIi4uL2NvcmUvdHlwZXNcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIHJlc29sdmVFbnZpcm9ubWVudChleHBsaWNpdD86IEVudmlyb25tZW50TmFtZSB8IG51bGwpOiBFbnZpcm9ubWVudE5hbWUge1xuICBpZiAoZXhwbGljaXQgJiYgZXhwbGljaXQubGVuZ3RoID4gMCkgcmV0dXJuIGV4cGxpY2l0O1xuICBjb25zdCB2ZXJjZWxFbnYgPSBwcm9jZXNzLmVudi5WRVJDRUxfRU5WIGFzIEVudmlyb25tZW50TmFtZSB8IHVuZGVmaW5lZDtcbiAgaWYgKHZlcmNlbEVudiAmJiB2ZXJjZWxFbnYubGVuZ3RoID4gMCkgcmV0dXJuIHZlcmNlbEVudiBhcyBFbnZpcm9ubWVudE5hbWU7XG4gIGNvbnN0IG5vZGVFbnYgPSBwcm9jZXNzLmVudi5OT0RFX0VOViBhcyBFbnZpcm9ubWVudE5hbWUgfCB1bmRlZmluZWQ7XG4gIGlmIChub2RlRW52ICYmIG5vZGVFbnYubGVuZ3RoID4gMCkgcmV0dXJuIG1hcE5vZGVFbnYobm9kZUVudik7XG4gIHJldHVybiBcInByb2R1Y3Rpb25cIjtcbn1cblxuZnVuY3Rpb24gbWFwTm9kZUVudihlbnY6IEVudmlyb25tZW50TmFtZSk6IEVudmlyb25tZW50TmFtZSB7XG4gIGlmIChlbnYgPT09IFwiZGV2ZWxvcG1lbnRcIikgcmV0dXJuIFwiZGV2ZWxvcG1lbnRcIjtcbiAgaWYgKGVudiA9PT0gXCJ0ZXN0XCIpIHJldHVybiBcInRlc3RcIjtcbiAgaWYgKGVudiA9PT0gXCJwcm9kdWN0aW9uXCIpIHJldHVybiBcInByb2R1Y3Rpb25cIjtcbiAgcmV0dXJuIGVudjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdE5hbWVzcGFjZWRLZXkobmFtZXNwYWNlOiBzdHJpbmcsIGVudjogRW52aXJvbm1lbnROYW1lLCBrZXk6IHN0cmluZyk6IHN0cmluZyB7XG4gIHJldHVybiBgJHtuYW1lc3BhY2V9X18ke2Vudn1fXyR7a2V5fWA7XG59XG5cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../dist/chunk-B67M3F4I.js\n");

/***/ }),

/***/ "(rsc)/../../dist/chunk-JQOEZPFK.js":
/*!************************************!*\
  !*** ../../dist/chunk-JQOEZPFK.js ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createSyncer: () => (/* binding */ createSyncer),\n/* harmony export */   fetchChangedRows: () => (/* binding */ fetchChangedRows),\n/* harmony export */   getItems: () => (/* binding */ getItems),\n/* harmony export */   parseEdgeConfigConnection: () => (/* binding */ parseEdgeConfigConnection),\n/* harmony export */   patchItems: () => (/* binding */ patchItems)\n/* harmony export */ });\n/* harmony import */ var _chunk_B67M3F4I_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-B67M3F4I.js */ \"(rsc)/../../dist/chunk-B67M3F4I.js\");\n/* harmony import */ var _vercel_edge_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vercel/edge-config */ \"(rsc)/../../node_modules/@vercel/edge-config/dist/index.js\");\n\n// src/sync/edge-config.ts\n\nasync function getItems(keys, opts) {\n    if (opts.connectionString) {\n        const client = (0,_vercel_edge_config__WEBPACK_IMPORTED_MODULE_0__.createClient)(opts.connectionString);\n        const all = await client.getAll();\n        const out2 = {};\n        for (const k of keys){\n            out2[k] = all[k] ?? null;\n        }\n        return out2;\n    }\n    const base = opts.edgeConfigId ? `https://api.vercel.com/v1/edge-config/${opts.edgeConfigId}` : `https://api.vercel.com/v1/edge-config`;\n    const search = new URLSearchParams();\n    search.set(\"keys\", JSON.stringify(keys));\n    const url = `${base}/items?${search.toString()}`;\n    const res = await fetch(url, {\n        headers: opts.token ? {\n            Authorization: `Bearer ${opts.token}`\n        } : void 0,\n        cache: \"no-store\"\n    });\n    if (!res.ok) {\n        let detail = \"\";\n        try {\n            detail = await res.text();\n        } catch  {}\n        throw new Error(`EdgeConfigReadError: ${res.status} ${detail}`);\n    }\n    const data = await res.json();\n    const out = {};\n    for (const k of keys)out[k] = null;\n    for (const it of data ?? []){\n        if (keys.includes(it.key)) {\n            out[it.key] = it.value;\n        }\n    }\n    return out;\n}\nasync function patchItems(items, opts) {\n    const baseUrl = `https://api.vercel.com/v1/edge-config/${opts.edgeConfigId}/items`;\n    const url = opts.teamId ? `${baseUrl}?teamId=${encodeURIComponent(opts.teamId)}` : baseUrl;\n    const payload = {\n        items\n    };\n    const res = await fetch(url, {\n        method: \"PATCH\",\n        headers: {\n            \"content-type\": \"application/json\",\n            Authorization: `Bearer ${opts.token}`\n        },\n        body: JSON.stringify(payload)\n    });\n    if (!res.ok) {\n        let detail = \"\";\n        try {\n            detail = await res.text();\n        } catch  {}\n        throw new Error(`EdgeConfigWriteError: ${res.status} ${detail}`);\n    }\n}\n// src/sync/checkpoint.ts\nasync function readCheckpoint(namespace, env, opts) {\n    const key = `${namespace}__sync__${env}__checkpoint`;\n    const map = await getItems([\n        key\n    ], opts);\n    const v = map[key];\n    return typeof v === \"string\" && v.length > 0 ? v : null;\n}\nasync function writeCheckpoint(namespace, env, iso, opts) {\n    const key = `${namespace}__sync__${env}__checkpoint`;\n    await patchItems([\n        {\n            operation: \"upsert\",\n            key,\n            value: iso\n        }\n    ], opts);\n}\nasync function writeSummary(namespace, env, summary, opts) {\n    const key = `${namespace}__sync__${env}__summary`;\n    await patchItems([\n        {\n            operation: \"upsert\",\n            key,\n            value: summary\n        }\n    ], opts);\n}\n// src/utils/edge-config-parser.ts\nfunction parseEdgeConfigConnection(connectionString) {\n    try {\n        const url = new URL(connectionString);\n        const token = url.searchParams.get(\"token\");\n        const pathParts = url.pathname.split(\"/\");\n        const edgeConfigId = pathParts[pathParts.length - 1];\n        if (!token || !edgeConfigId) {\n            throw new Error(\"Invalid connection string format\");\n        }\n        return {\n            edgeConfigId,\n            token\n        };\n    } catch  {\n        throw new Error(\"Failed to parse Edge Config connection string\");\n    }\n}\n// src/sync/syncer.ts\nfunction createSyncer(options) {\n    const namespace = options.namespace ?? \"flag\";\n    const env = (0,_chunk_B67M3F4I_js__WEBPACK_IMPORTED_MODULE_1__.resolveEnvironment)(options.env ?? null);\n    const interval = Math.max(1e3, options.pollIntervalMs ?? 3e4);\n    const mode = options.mode ?? \"once\";\n    const drift = options.driftPolicy ?? \"prefer-notion\";\n    const log = options.logger ?? ((e)=>console.log(e));\n    const { edgeConfigId } = parseEdgeConfigConnection(options.edgeConfig.connectionString);\n    const edgeConfigOpts = {\n        edgeConfigId,\n        token: options.edgeConfig.apiToken,\n        teamId: options.edgeConfig.teamId\n    };\n    async function computeChecksum(values) {\n        const keys = Object.keys(values).sort();\n        const data = JSON.stringify(keys.map((k)=>[\n                k,\n                values[k]\n            ]));\n        let h = 0;\n        for(let i = 0; i < data.length; i++)h = h * 31 + data.charCodeAt(i) >>> 0;\n        return h.toString(16);\n    }\n    function mapNotionToEdge(rows) {\n        const out = {};\n        for (const r of rows){\n            if (!r.envs.includes(env)) continue;\n            const k = (0,_chunk_B67M3F4I_js__WEBPACK_IMPORTED_MODULE_1__.formatNamespacedKey)(namespace, env, r.key);\n            out[k] = r.value;\n        }\n        return out;\n    }\n    async function diffAndPatch(target) {\n        const keys = Object.keys(target);\n        if (keys.length === 0) return 0;\n        const current = await getItems(keys, {\n            ...edgeConfigOpts,\n            connectionString: options.edgeConfig.connectionString\n        });\n        console.log(`Diff check: target keys=${Object.keys(target).join(\",\")}`);\n        console.log(`Current from Edge Config:`, current);\n        const items = [];\n        for (const k of keys){\n            const desired = target[k];\n            const existing = current[k];\n            const equal = JSON.stringify(desired) === JSON.stringify(existing);\n            console.log(`Key ${k}: desired=${JSON.stringify(desired)} existing=${JSON.stringify(existing)} equal=${equal}`);\n            if (!equal) {\n                if (drift === \"prefer-edge-config\") continue;\n                if (drift === \"report-only\") continue;\n                items.push({\n                    operation: \"upsert\",\n                    key: k,\n                    value: desired\n                });\n            }\n        }\n        console.log(`Will patch ${items.length} items:`, items.map((i)=>`${i.key}=${JSON.stringify(i.value)}`));\n        if (items.length > 0) await patchItems(items, edgeConfigOpts);\n        return items.length;\n    }\n    async function once(fetcher) {\n        const t0 = Date.now();\n        const since = await readCheckpoint(namespace, env, {\n            ...edgeConfigOpts,\n            connectionString: options.edgeConfig.connectionString\n        });\n        console.log(`Sync checkpoint: since=${since}`);\n        const rows = await fetcher(since);\n        console.log(`Fetched ${rows.length} rows from Notion since ${since || \"beginning\"}`);\n        const mapped = mapNotionToEdge(rows);\n        console.log(`Mapped to Edge Config:`, mapped);\n        const updated = await diffAndPatch(mapped);\n        const keys = Object.keys(mapped);\n        const after = await getItems(keys, {\n            ...edgeConfigOpts,\n            connectionString: options.edgeConfig.connectionString\n        });\n        const checksum = await computeChecksum(after);\n        const now = /* @__PURE__ */ new Date().toISOString();\n        await writeCheckpoint(namespace, env, now, edgeConfigOpts);\n        await writeSummary(namespace, env, {\n            updated,\n            at: now,\n            checksum\n        }, edgeConfigOpts);\n        log(`synced ${updated} flags for ${env}`);\n    }\n    async function run(fetcher) {\n        if (mode === \"once\") {\n            await once(fetcher);\n            return;\n        }\n        while(true){\n            try {\n                await once(fetcher);\n            } catch (e) {\n                log(e);\n            }\n            await new Promise((r)=>setTimeout(r, interval));\n        }\n    }\n    return {\n        run\n    };\n}\n// src/utils/errors.ts\nvar NotionSchemaError = class extends Error {\n    constructor(message, pageUrl, hint){\n        super(message);\n        this.name = \"NotionSchemaError\";\n        this.pageUrl = pageUrl;\n        this.hint = hint;\n    }\n};\n// src/sync/notion.ts\nvar NOTION_VERSION = \"2022-06-28\";\nasync function fetchChangedRows(opts, sinceIso) {\n    const rows = [];\n    const databaseId = await resolveDatabaseId(opts);\n    let hasMore = true;\n    let startCursor = void 0;\n    while(hasMore){\n        const body = {};\n        if (sinceIso) body.filter = {\n            timestamp: \"last_edited_time\",\n            last_edited_time: {\n                on_or_after: sinceIso\n            }\n        };\n        if (startCursor) body.start_cursor = startCursor;\n        const res = await fetch(`https://api.notion.com/v1/databases/${databaseId}/query`, {\n            method: \"POST\",\n            headers: {\n                Authorization: `Bearer ${opts.token}`,\n                \"Notion-Version\": NOTION_VERSION,\n                \"content-type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n        });\n        if (!res.ok) throw new Error(`NotionQueryError: ${res.status}`);\n        const data = await res.json();\n        for (const page of data.results){\n            const parsed = parseRow(page);\n            rows.push(parsed);\n        }\n        hasMore = Boolean(data.has_more);\n        startCursor = data.next_cursor ?? void 0;\n    }\n    return rows;\n}\nasync function resolveDatabaseId(opts) {\n    if (opts.databaseId && opts.databaseId.length > 0) return opts.databaseId;\n    if (!opts.databaseName || opts.databaseName.length === 0) throw new Error(\"NotionDatabaseIdOrNameRequired\");\n    const res = await fetch(\"https://api.notion.com/v1/search\", {\n        method: \"POST\",\n        headers: {\n            Authorization: `Bearer ${opts.token}`,\n            \"Notion-Version\": NOTION_VERSION,\n            \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            query: opts.databaseName,\n            filter: {\n                property: \"object\",\n                value: \"database\"\n            }\n        })\n    });\n    if (!res.ok) throw new Error(`NotionSearchError: ${res.status}`);\n    const data = await res.json();\n    const nameLower = opts.databaseName.toLowerCase();\n    const exact = data.results.find((r)=>(r.title?.[0]?.plain_text ?? \"\").toLowerCase() === nameLower);\n    if (exact) return exact.id;\n    const first = data.results[0];\n    if (first?.id) return first.id;\n    throw new Error(\"NotionDatabaseNotFound\");\n}\nfunction parseRow(page) {\n    const props = page.properties;\n    const pageUrl = `https://www.notion.so/${page.id.replace(/-/g, \"\")}`;\n    const key = readTitle(props.key) || readTitle(props.Key);\n    if (!key) throw new NotionSchemaError(\"Missing required property 'key' (Title)\", pageUrl, \"Add a Title column named 'key'.\");\n    const typeName = readSelect(props.type) || readSelect(props.Type) || inferTypeFromValues(props);\n    if (!typeName) throw new NotionSchemaError(\"Missing 'type' (Select)\", pageUrl, \"Add a Select column 'type' with one of: boolean | number | string | json | percentRollout | ruleSet; or provide a typed value column like 'value_boolean'.\");\n    const envs = readMultiSelect(props.env) || readMultiSelect(props.Env) || [];\n    if (!Array.isArray(envs) || envs.length === 0) throw new NotionSchemaError(\"Missing 'env' (Multi-select)\", pageUrl, \"Add an 'env' multi-select with values like development, preview, production.\");\n    const lastEditedAt = page.last_edited_time;\n    const value = readValueByType(typeName, props, pageUrl);\n    return {\n        key,\n        type: typeName,\n        value,\n        envs,\n        lastEditedAt,\n        pageUrl\n    };\n}\nfunction readTitle(prop) {\n    if (!prop || prop.type !== \"title\" || !Array.isArray(prop.title)) return null;\n    const t = prop.title.find((x)=>typeof x.plain_text === \"string\");\n    return t?.plain_text ?? null;\n}\nfunction readSelect(prop) {\n    if (!prop || prop.type !== \"select\" || typeof prop.select?.name !== \"string\") return null;\n    const n = String(prop.select.name);\n    if (n === \"boolean\" || n === \"number\" || n === \"string\" || n === \"json\" || n === \"percentRollout\" || n === \"ruleSet\") return n;\n    return null;\n}\nfunction readMultiSelect(prop) {\n    if (!prop || prop.type !== \"multi_select\" || !Array.isArray(prop.multi_select)) return null;\n    return prop.multi_select.map((x)=>String(x.name)).filter(Boolean);\n}\nfunction readRichTextFirst(prop) {\n    if (!prop) return null;\n    const arr = prop.rich_text;\n    if (!Array.isArray(arr) || arr.length === 0) return null;\n    const t = arr[0]?.plain_text;\n    return typeof t === \"string\" ? t : null;\n}\nfunction readValueByType(typeName, props, pageUrl) {\n    if (typeName === \"boolean\") {\n        if (props.value?.type === \"checkbox\") return Boolean(props.value.checkbox);\n        if (props.Value?.type === \"checkbox\") return Boolean(props.Value.checkbox);\n        if (props.value_boolean?.type === \"checkbox\") return Boolean(props.value_boolean.checkbox);\n        throw new NotionSchemaError(\"Boolean value missing\", pageUrl, \"Ensure a Checkbox in 'value' or add 'value_boolean' Checkbox.\");\n    }\n    if (typeName === \"number\") {\n        const n = props.value?.number ?? props.Value?.number ?? props.value_number?.number;\n        if (typeof n === \"number\") return n;\n        throw new NotionSchemaError(\"Number value missing\", pageUrl, \"Ensure a Number in 'value' or add 'value_number'.\");\n    }\n    if (typeName === \"string\") {\n        const s = readRichTextFirst(props.value ?? props.Value ?? props.value_string);\n        if (typeof s === \"string\") return s;\n        throw new NotionSchemaError(\"String value missing\", pageUrl, \"Ensure first Rich text block in 'value' or add 'value_string'.\");\n    }\n    if (typeName === \"json\") {\n        const s = readRichTextFirst(props.value ?? props.Value ?? props.value_json);\n        if (typeof s !== \"string\") throw new NotionSchemaError(\"JSON value missing\", pageUrl, \"Put JSON in 'value' rich text or use 'value_json'.\");\n        try {\n            return JSON.parse(s);\n        } catch (e) {\n            throw new NotionSchemaError(\"JSON parse failed\", pageUrl, \"Ensure valid JSON (first block).\");\n        }\n    }\n    if (typeName === \"percentRollout\") {\n        const n = props.value?.number ?? props.Value?.number ?? props.value_percent?.number;\n        const v = typeof n === \"number\" ? Math.max(0, Math.min(100, Math.floor(n))) : 0;\n        return v;\n    }\n    if (typeName === \"ruleSet\") {\n        const s = readRichTextFirst(props.value ?? props.Value ?? props.value_ruleset);\n        if (typeof s !== \"string\") throw new NotionSchemaError(\"ruleSet value missing\", pageUrl, \"Provide JSON in 'value' or 'value_ruleSet' matching { rules: [...] }.\");\n        try {\n            const obj = JSON.parse(s);\n            return obj;\n        } catch (e) {\n            throw new NotionSchemaError(\"ruleSet parse failed\", pageUrl, 'Ensure JSON like {\"rules\":[{\"if\":{...},\"then\":true},{\"else\":false}]}.');\n        }\n    }\n    throw new NotionSchemaError(\"Unsupported type\", pageUrl, \"Allowed: boolean | number | string | json | percentRollout | ruleSet.\");\n}\nfunction inferTypeFromValues(props) {\n    if (props?.value_boolean?.type === \"checkbox\") return \"boolean\";\n    if (props?.value_number?.type === \"number\" && typeof props.value_number.number === \"number\") return \"number\";\n    if (props?.value_string?.type === \"rich_text\" && Array.isArray(props.value_string.rich_text)) return \"string\";\n    if (props?.value_json?.type === \"rich_text\" && Array.isArray(props.value_json.rich_text)) return \"json\";\n    if (props?.value_percent?.type === \"number\" && typeof props.value_percent.number === \"number\") return \"percentRollout\";\n    if (props?.value_ruleset?.type === \"rich_text\" && Array.isArray(props.value_ruleset.rich_text)) return \"ruleSet\";\n    return null;\n}\n //# sourceMappingURL=chunk-JQOEZPFK.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../dist/chunk-JQOEZPFK.js\n");

/***/ }),

/***/ "(rsc)/./app/api/flags/sync/route.ts":
/*!*************************************!*\
  !*** ./app/api/flags/sync/route.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var notion_edge_flags__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! notion-edge-flags */ \"(rsc)/../../dist/chunk-JQOEZPFK.js\");\n\n\nasync function GET(req) {\n    const secret = process.env.SYNC_SECRET;\n    const auth = req.headers.get('authorization');\n    if (!secret || auth !== `Bearer ${secret}`) return new next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse('unauthorized', {\n        status: 401\n    });\n    const notion = {\n        token: process.env.NOTION_TOKEN,\n        databaseId: process.env.NOTION_FLAGS_DB || undefined,\n        databaseName: process.env.NOTION_FLAGS_DB_NAME || undefined\n    };\n    const edgeConfig = {\n        connectionString: process.env.EDGE_CONFIG,\n        apiToken: process.env.VERCEL_API_TOKEN\n    };\n    const syncer = (0,notion_edge_flags__WEBPACK_IMPORTED_MODULE_1__.createSyncer)({\n        notion,\n        edgeConfig,\n        mode: 'once'\n    });\n    await syncer.run((since)=>(0,notion_edge_flags__WEBPACK_IMPORTED_MODULE_1__.fetchChangedRows)(notion, since));\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        ok: true\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL2ZsYWdzL3N5bmMvcm91dGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTJDO0FBQ3dCO0FBRTVELGVBQWVHLElBQUlDLEdBQVk7SUFDcEMsTUFBTUMsU0FBU0MsUUFBUUMsR0FBRyxDQUFDQyxXQUFXO0lBQ3RDLE1BQU1DLE9BQU9MLElBQUlNLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDO0lBQzdCLElBQUksQ0FBQ04sVUFBVUksU0FBUyxDQUFDLE9BQU8sRUFBRUosUUFBUSxFQUFFLE9BQU8sSUFBSUwscURBQVlBLENBQUMsZ0JBQWdCO1FBQUVZLFFBQVE7SUFBSTtJQUNsRyxNQUFNQyxTQUFTO1FBQUVDLE9BQU9SLFFBQVFDLEdBQUcsQ0FBQ1EsWUFBWTtRQUFHQyxZQUFZVixRQUFRQyxHQUFHLENBQUNVLGVBQWUsSUFBSUM7UUFBV0MsY0FBY2IsUUFBUUMsR0FBRyxDQUFDYSxvQkFBb0IsSUFBSUY7SUFBVTtJQUNySyxNQUFNRyxhQUFhO1FBQUVDLGtCQUFrQmhCLFFBQVFDLEdBQUcsQ0FBQ2dCLFdBQVc7UUFBR0MsVUFBVWxCLFFBQVFDLEdBQUcsQ0FBQ2tCLGdCQUFnQjtJQUFFO0lBQ3pHLE1BQU1DLFNBQVN6QiwrREFBWUEsQ0FBQztRQUFFWTtRQUFRUTtRQUFZTSxNQUFNO0lBQU87SUFDL0QsTUFBTUQsT0FBT0UsR0FBRyxDQUFDLENBQUNDLFFBQVUzQixtRUFBZ0JBLENBQUNXLFFBQVFnQjtJQUNyRCxPQUFPN0IscURBQVlBLENBQUM4QixJQUFJLENBQUM7UUFBRUMsSUFBSTtJQUFLO0FBQ3RDIiwic291cmNlcyI6WyIvVXNlcnMveWFob3JiYXJrb3Vza2kvdGhlbmV0d29yay9lZGdlLWZlYXR1cmUtZmxhZ3MvZXhhbXBsZXMvbmV4dGpzLWxpdmUvYXBwL2FwaS9mbGFncy9zeW5jL3JvdXRlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJztcbmltcG9ydCB7IGNyZWF0ZVN5bmNlciwgZmV0Y2hDaGFuZ2VkUm93cyB9IGZyb20gJ25vdGlvbi1lZGdlLWZsYWdzJztcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIEdFVChyZXE6IFJlcXVlc3QpIHtcbiAgY29uc3Qgc2VjcmV0ID0gcHJvY2Vzcy5lbnYuU1lOQ19TRUNSRVQ7XG4gIGNvbnN0IGF1dGggPSByZXEuaGVhZGVycy5nZXQoJ2F1dGhvcml6YXRpb24nKTtcbiAgaWYgKCFzZWNyZXQgfHwgYXV0aCAhPT0gYEJlYXJlciAke3NlY3JldH1gKSByZXR1cm4gbmV3IE5leHRSZXNwb25zZSgndW5hdXRob3JpemVkJywgeyBzdGF0dXM6IDQwMSB9KTtcbiAgY29uc3Qgbm90aW9uID0geyB0b2tlbjogcHJvY2Vzcy5lbnYuTk9USU9OX1RPS0VOISwgZGF0YWJhc2VJZDogcHJvY2Vzcy5lbnYuTk9USU9OX0ZMQUdTX0RCIHx8IHVuZGVmaW5lZCwgZGF0YWJhc2VOYW1lOiBwcm9jZXNzLmVudi5OT1RJT05fRkxBR1NfREJfTkFNRSB8fCB1bmRlZmluZWQgfTtcbiAgY29uc3QgZWRnZUNvbmZpZyA9IHsgY29ubmVjdGlvblN0cmluZzogcHJvY2Vzcy5lbnYuRURHRV9DT05GSUchLCBhcGlUb2tlbjogcHJvY2Vzcy5lbnYuVkVSQ0VMX0FQSV9UT0tFTiEgfTtcbiAgY29uc3Qgc3luY2VyID0gY3JlYXRlU3luY2VyKHsgbm90aW9uLCBlZGdlQ29uZmlnLCBtb2RlOiAnb25jZScgfSk7XG4gIGF3YWl0IHN5bmNlci5ydW4oKHNpbmNlKSA9PiBmZXRjaENoYW5nZWRSb3dzKG5vdGlvbiwgc2luY2UpKTtcbiAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgb2s6IHRydWUgfSk7XG59XG5cbiJdLCJuYW1lcyI6WyJOZXh0UmVzcG9uc2UiLCJjcmVhdGVTeW5jZXIiLCJmZXRjaENoYW5nZWRSb3dzIiwiR0VUIiwicmVxIiwic2VjcmV0IiwicHJvY2VzcyIsImVudiIsIlNZTkNfU0VDUkVUIiwiYXV0aCIsImhlYWRlcnMiLCJnZXQiLCJzdGF0dXMiLCJub3Rpb24iLCJ0b2tlbiIsIk5PVElPTl9UT0tFTiIsImRhdGFiYXNlSWQiLCJOT1RJT05fRkxBR1NfREIiLCJ1bmRlZmluZWQiLCJkYXRhYmFzZU5hbWUiLCJOT1RJT05fRkxBR1NfREJfTkFNRSIsImVkZ2VDb25maWciLCJjb25uZWN0aW9uU3RyaW5nIiwiRURHRV9DT05GSUciLCJhcGlUb2tlbiIsIlZFUkNFTF9BUElfVE9LRU4iLCJzeW5jZXIiLCJtb2RlIiwicnVuIiwic2luY2UiLCJqc29uIiwib2siXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/api/flags/sync/route.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fflags%2Fsync%2Froute&page=%2Fapi%2Fflags%2Fsync%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fflags%2Fsync%2Froute.ts&appDir=%2FUsers%2Fyahorbarkouski%2Fthenetwork%2Fedge-feature-flags%2Fexamples%2Fnextjs-live%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fyahorbarkouski%2Fthenetwork%2Fedge-feature-flags%2Fexamples%2Fnextjs-live&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fflags%2Fsync%2Froute&page=%2Fapi%2Fflags%2Fsync%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fflags%2Fsync%2Froute.ts&appDir=%2FUsers%2Fyahorbarkouski%2Fthenetwork%2Fedge-feature-flags%2Fexamples%2Fnextjs-live%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fyahorbarkouski%2Fthenetwork%2Fedge-feature-flags%2Fexamples%2Fnextjs-live&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_yahorbarkouski_thenetwork_edge_feature_flags_examples_nextjs_live_app_api_flags_sync_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/flags/sync/route.ts */ \"(rsc)/./app/api/flags/sync/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/flags/sync/route\",\n        pathname: \"/api/flags/sync\",\n        filename: \"route\",\n        bundlePath: \"app/api/flags/sync/route\"\n    },\n    resolvedPagePath: \"/Users/yahorbarkouski/thenetwork/edge-feature-flags/examples/nextjs-live/app/api/flags/sync/route.ts\",\n    nextConfigOutput,\n    userland: _Users_yahorbarkouski_thenetwork_edge_feature_flags_examples_nextjs_live_app_api_flags_sync_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZmbGFncyUyRnN5bmMlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmZsYWdzJTJGc3luYyUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmZsYWdzJTJGc3luYyUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnlhaG9yYmFya291c2tpJTJGdGhlbmV0d29yayUyRmVkZ2UtZmVhdHVyZS1mbGFncyUyRmV4YW1wbGVzJTJGbmV4dGpzLWxpdmUlMkZhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPSUyRlVzZXJzJTJGeWFob3JiYXJrb3Vza2klMkZ0aGVuZXR3b3JrJTJGZWRnZS1mZWF0dXJlLWZsYWdzJTJGZXhhbXBsZXMlMkZuZXh0anMtbGl2ZSZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBK0Y7QUFDdkM7QUFDcUI7QUFDb0Q7QUFDakk7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHlHQUFtQjtBQUMzQztBQUNBLGNBQWMsa0VBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzREFBc0Q7QUFDOUQ7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDMEY7O0FBRTFGIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9Vc2Vycy95YWhvcmJhcmtvdXNraS90aGVuZXR3b3JrL2VkZ2UtZmVhdHVyZS1mbGFncy9leGFtcGxlcy9uZXh0anMtbGl2ZS9hcHAvYXBpL2ZsYWdzL3N5bmMvcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2ZsYWdzL3N5bmMvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9mbGFncy9zeW5jXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9mbGFncy9zeW5jL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL1VzZXJzL3lhaG9yYmFya291c2tpL3RoZW5ldHdvcmsvZWRnZS1mZWF0dXJlLWZsYWdzL2V4YW1wbGVzL25leHRqcy1saXZlL2FwcC9hcGkvZmxhZ3Mvc3luYy9yb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHdvcmtBc3luY1N0b3JhZ2UsIHdvcmtVbml0QXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHdvcmtBc3luY1N0b3JhZ2UsXG4gICAgICAgIHdvcmtVbml0QXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgd29ya0FzeW5jU3RvcmFnZSwgd29ya1VuaXRBc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fflags%2Fsync%2Froute&page=%2Fapi%2Fflags%2Fsync%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fflags%2Fsync%2Froute.ts&appDir=%2FUsers%2Fyahorbarkouski%2Fthenetwork%2Fedge-feature-flags%2Fexamples%2Fnextjs-live%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fyahorbarkouski%2Fthenetwork%2Fedge-feature-flags%2Fexamples%2Fnextjs-live&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "node:fs/promises":
/*!***********************************!*\
  !*** external "node:fs/promises" ***!
  \***********************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:fs/promises");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@vercel"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fflags%2Fsync%2Froute&page=%2Fapi%2Fflags%2Fsync%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fflags%2Fsync%2Froute.ts&appDir=%2FUsers%2Fyahorbarkouski%2Fthenetwork%2Fedge-feature-flags%2Fexamples%2Fnextjs-live%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fyahorbarkouski%2Fthenetwork%2Fedge-feature-flags%2Fexamples%2Fnextjs-live&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();